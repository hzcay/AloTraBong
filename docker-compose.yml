services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    restart: unless-stopped
    environment:
      SA_PASSWORD: "123456@Abc"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - springnet
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P '123456@Abc' -Q 'SELECT 1' -C || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  db-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      sqlserver:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "
      echo 'âŒ› Waiting for SQL Server...';
      for i in {1..30}; do
        /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P '123456@Abc' -Q 'SELECT 1' && break;
        echo '   â€¦ SQL not ready yet'; sleep 2;
      done;
      echo 'ðŸš€ Creating database if not exists';
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P '123456@Abc' -Q \"
        IF DB_ID('Alotrabong') IS NULL
          CREATE DATABASE Alotrabong;
      \";
      echo 'âœ… DB ready';
      "
    networks:
      - springnet
    restart: "no"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - springnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  app:
    build: .
    container_name: alotrabong
    restart: unless-stopped
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sqlserver:1433;databaseName=Alotrabong;encrypt=false"
      SPRING_DATASOURCE_USERNAME: "sa"
      SPRING_DATASOURCE_PASSWORD: "123456@Abc"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
    ports:
      - "8080:8080"
    networks:
      - springnet

volumes:
  sqlserver_data:

networks:
  springnet:
